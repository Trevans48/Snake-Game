{"ast":null,"code":"// import display from \"./display\";\nimport display from \"./display\"; // place your code on line 5 above the export statement below\n\nclass Snake {\n  constructor(snakeColor) {\n    this.currentPosition = void 0;\n    this.currentDirection = void 0;\n    this.color = void 0;\n    this.currentPosition = new Point(0, 0);\n    this.currentDirection = 1;\n    this.color = snakeColor;\n  }\n\n  move(moves) {\n    display(\"The\", this.color, \"snake moved\", moves, \"squares\");\n    if (this.currentDirection === 1) this.currentPosition = this.currentPosition + moves;else this.currentPosition = this.currentPosition - moves;\n  } //up = 1, down = 2, left = 3, right = 4\n\n\n  turnleft() {\n    if (this.currentDirection === 1) {\n      this.currentDirection = 3;\n    } else if (this.currentDirection === 2) {\n      this.currentDirection = 3;\n    } else if (this.currentDirection === 3) {\n      this.currentDirection = 3;\n    } else if (this.currentDirection === 4) {\n      this.currentDirection = 3;\n    }\n\n    display(\"The\", this.color, \"snake turned left\");\n  }\n\n  turnRight() {\n    if (this.currentDirection === 1) {\n      this.currentDirection = 4;\n    } else if (this.currentDirection === 2) {\n      this.currentDirection = 4;\n    } else if (this.currentDirection === 3) {\n      this.currentDirection = 4;\n    } else if (this.currentDirection === 4) {\n      this.currentDirection = 4;\n    }\n\n    display(\"The\", this.color, \"snake turned right\");\n  }\n\n  get position() {\n    return this.currentPosition;\n  }\n\n}\n\nclass Point {\n  constructor() {\n    this.xcoord = void 0;\n    this.ycoord = void 0;\n    this.xcoord = 0;\n    this.ycoord = 0;\n  }\n\n  get position() {\n    return this.xcoord;\n    return this.ycoord;\n  }\n\n}\n\nexport default Snake;","map":{"version":3,"sources":["C:/Users/trevo/OneDrive/Documents/College/sandbox/src/Snake.ts"],"names":["display","Snake","constructor","snakeColor","currentPosition","currentDirection","color","Point","move","moves","turnleft","turnRight","position","xcoord","ycoord"],"mappings":"AAAA;AAEA,OAAOA,OAAP,MAAoB,WAApB,C,CAEA;;AAEA,MAAMC,KAAN,CAAY;AAIVC,EAAAA,WAAW,CAACC,UAAD,EAAqB;AAAA,SAHxBC,eAGwB;AAAA,SAFxBC,gBAEwB;AAAA,SADxBC,KACwB;AAC9B,SAAKF,eAAL,GAAuB,IAAIG,KAAJ,CAAU,CAAV,EAAY,CAAZ,CAAvB;AACA,SAAKF,gBAAL,GAAwB,CAAxB;AACA,SAAKC,KAAL,GAAaH,UAAb;AACD;;AACDK,EAAAA,IAAI,CAACC,KAAD,EAAgB;AAClBT,IAAAA,OAAO,CAAC,KAAD,EAAQ,KAAKM,KAAb,EAAoB,aAApB,EAAmCG,KAAnC,EAA0C,SAA1C,CAAP;AACA,QAAI,KAAKJ,gBAAL,KAA0B,CAA9B,EACE,KAAKD,eAAL,GAAuB,KAAKA,eAAL,GAAuBK,KAA9C,CADF,KAEK,KAAKL,eAAL,GAAuB,KAAKA,eAAL,GAAuBK,KAA9C;AACN,GAdS,CAeV;;;AACAC,EAAAA,QAAQ,GAAG;AACT,QAAI,KAAKL,gBAAL,KAA0B,CAA9B,EAAiC;AAC/B,WAAKA,gBAAL,GAAwB,CAAxB;AACD,KAFD,MAEO,IAAI,KAAKA,gBAAL,KAA0B,CAA9B,EAAiC;AACtC,WAAKA,gBAAL,GAAwB,CAAxB;AACD,KAFM,MAGF,IAAI,KAAKA,gBAAL,KAA0B,CAA9B,EAAiC;AACpC,WAAKA,gBAAL,GAAwB,CAAxB;AACD,KAFI,MAGA,IAAI,KAAKA,gBAAL,KAA0B,CAA9B,EAAiC;AACpC,WAAKA,gBAAL,GAAwB,CAAxB;AACD;;AACDL,IAAAA,OAAO,CAAC,KAAD,EAAQ,KAAKM,KAAb,EAAoB,mBAApB,CAAP;AACD;;AAEDK,EAAAA,SAAS,GAAG;AACV,QAAI,KAAKN,gBAAL,KAA0B,CAA9B,EAAiC;AAC/B,WAAKA,gBAAL,GAAwB,CAAxB;AACD,KAFD,MAEO,IAAI,KAAKA,gBAAL,KAA0B,CAA9B,EAAiC;AACtC,WAAKA,gBAAL,GAAwB,CAAxB;AACD,KAFM,MAGF,IAAI,KAAKA,gBAAL,KAA0B,CAA9B,EAAiC;AACpC,WAAKA,gBAAL,GAAwB,CAAxB;AACD,KAFI,MAGA,IAAI,KAAKA,gBAAL,KAA0B,CAA9B,EAAiC;AACpC,WAAKA,gBAAL,GAAwB,CAAxB;AACD;;AACDL,IAAAA,OAAO,CAAC,KAAD,EAAQ,KAAKM,KAAb,EAAoB,oBAApB,CAAP;AACD;;AAEkB,MAARM,QAAQ,GAAG;AACpB,WAAO,KAAKR,eAAZ;AACD;;AAhDS;;AAmDZ,MAAMG,KAAN,CAAY;AAGVL,EAAAA,WAAW,GAAG;AAAA,SAFNW,MAEM;AAAA,SADNC,MACM;AACZ,SAAKD,MAAL,GAAc,CAAd;AACA,SAAKC,MAAL,GAAc,CAAd;AACD;;AACkB,MAARF,QAAQ,GAAG;AACpB,WAAO,KAAKC,MAAZ;AACA,WAAO,KAAKC,MAAZ;AACD;;AAVS;;AAaZ,eAAeb,KAAf","sourcesContent":["// import display from \"./display\";\r\n\r\nimport display from \"./display\";\r\n\r\n// place your code on line 5 above the export statement below\r\n\r\nclass Snake {\r\n  private currentPosition: number;\r\n  private currentDirection: number;\r\n  private color: string;\r\n  constructor(snakeColor: string) {\r\n    this.currentPosition = new Point(0,0);\r\n    this.currentDirection = 1;\r\n    this.color = snakeColor;\r\n  }\r\n  move(moves: number) {\r\n    display(\"The\", this.color, \"snake moved\", moves, \"squares\");\r\n    if (this.currentDirection === 1)\r\n      this.currentPosition = this.currentPosition + moves;\r\n    else this.currentPosition = this.currentPosition - moves;\r\n  }\r\n  //up = 1, down = 2, left = 3, right = 4\r\n  turnleft() {\r\n    if (this.currentDirection === 1) {\r\n      this.currentDirection = 3;\r\n    } else if (this.currentDirection === 2) {\r\n      this.currentDirection = 3;\r\n    }\r\n    else if (this.currentDirection === 3) {\r\n      this.currentDirection = 3;\r\n    }\r\n    else if (this.currentDirection === 4) {\r\n      this.currentDirection = 3;\r\n    }\r\n    display(\"The\", this.color, \"snake turned left\");\r\n  }\r\n  \r\n  turnRight() {\r\n    if (this.currentDirection === 1) {\r\n      this.currentDirection = 4;\r\n    } else if (this.currentDirection === 2) {\r\n      this.currentDirection = 4;\r\n    }\r\n    else if (this.currentDirection === 3) {\r\n      this.currentDirection = 4;\r\n    }\r\n    else if (this.currentDirection === 4) {\r\n      this.currentDirection = 4;\r\n    }\r\n    display(\"The\", this.color, \"snake turned right\");\r\n  }\r\n  \r\n  public get position() {\r\n    return this.currentPosition;\r\n  }\r\n}\r\n\r\nclass Point {\r\n  private xcoord: number;\r\n  private ycoord: number;\r\n  constructor() {\r\n    this.xcoord = 0;\r\n    this.ycoord = 0;\r\n  }\r\n  public get position() {\r\n    return this.xcoord;\r\n    return this.ycoord;\r\n  }\r\n}\r\n\r\nexport default Snake;\r\n"]},"metadata":{},"sourceType":"module"}