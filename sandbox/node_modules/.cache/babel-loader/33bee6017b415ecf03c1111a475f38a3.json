{"ast":null,"code":"class CanvasWorldView {\n  constructor(scalingFactor) {\n    this.scalingFactor = void 0;\n    this.worldCanvas = void 0;\n    this.context = null;\n    this.scalingFactor = scalingFactor;\n    this.worldCanvas = document.createElement(\"canvas\");\n    this.context = this.worldCanvas.getContext(\"2d\");\n    document.body.appendChild(this.worldCanvas);\n  }\n\n  display(worldModel) {\n    const canvasWidth = worldModel.worldWidth() * this.scalingFactor;\n    const canvasHeight = worldModel.worldHeight() * this.scalingFactor;\n    this.worldCanvas.width = canvasWidth;\n    this.worldCanvas.height = canvasHeight;\n    this.context.fillRect(20, 20, canvasWidth, canvasHeight);\n    const snake = worldModel.Snake;\n\n    if (snake) {\n      snakeSize = 4;\n      const snakeWidth = snakeSize * this.scalingFactor;\n      const snakeHeight = snakeSize * this.scalingFactor;\n      const snakeX = snake.position.x * this.scalingFactor;\n      const snakeY = snake.position.y * this.scalingFactor;\n\n      if (this.context) {\n        this.context.fillStyle = \"red\";\n        this.context.fillRect(snakeX, snakeY, snakeWidth, snakeHeight);\n      }\n    }\n  }\n\n}\n\nexport default CanvasWorldView;","map":{"version":3,"sources":["C:/Users/trevo/OneDrive/Documents/College/Snake Game Code/Snake-Game/sandbox/src/CanvasWorldView.ts"],"names":["CanvasWorldView","constructor","scalingFactor","worldCanvas","context","document","createElement","getContext","body","appendChild","display","worldModel","canvasWidth","worldWidth","canvasHeight","worldHeight","width","height","fillRect","snake","Snake","snakeSize","snakeWidth","snakeHeight","snakeX","position","x","snakeY","y","fillStyle"],"mappings":"AAGA,MAAMA,eAAN,CAA4C;AAK3CC,EAAAA,WAAW,CAACC,aAAD,EAAwB;AAAA,SAJ3BA,aAI2B;AAAA,SAH3BC,WAG2B;AAAA,SAF3BC,OAE2B,GAFgB,IAEhB;AAClC,SAAKF,aAAL,GAAqBA,aAArB;AACA,SAAKC,WAAL,GAAmBE,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAnB;AACA,SAAKF,OAAL,GAAe,KAAKD,WAAL,CAAiBI,UAAjB,CAA4B,IAA5B,CAAf;AACAF,IAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0B,KAAKN,WAA/B;AACA;;AAEDO,EAAAA,OAAO,CAACC,UAAD,EAAyB;AAC/B,UAAMC,WAAW,GAAGD,UAAU,CAACE,UAAX,KAA0B,KAAKX,aAAnD;AACA,UAAMY,YAAY,GAAGH,UAAU,CAACI,WAAX,KAA2B,KAAKb,aAArD;AAEA,SAAKC,WAAL,CAAiBa,KAAjB,GAAyBJ,WAAzB;AACA,SAAKT,WAAL,CAAiBc,MAAjB,GAA0BH,YAA1B;AAEA,SAAKV,OAAL,CAAcc,QAAd,CAAuB,EAAvB,EAA2B,EAA3B,EAA+BN,WAA/B,EAA4CE,YAA5C;AAEA,UAAMK,KAAK,GAAGR,UAAU,CAACS,KAAzB;;AACA,QAAID,KAAJ,EAAW;AACVE,MAAAA,SAAS,GAAG,CAAZ;AACA,YAAMC,UAAU,GAAGD,SAAS,GAAG,KAAKnB,aAApC;AACA,YAAMqB,WAAW,GAAGF,SAAS,GAAG,KAAKnB,aAArC;AACA,YAAMsB,MAAM,GAAGL,KAAK,CAACM,QAAN,CAAeC,CAAf,GAAmB,KAAKxB,aAAvC;AACA,YAAMyB,MAAM,GAAGR,KAAK,CAACM,QAAN,CAAeG,CAAf,GAAmB,KAAK1B,aAAvC;;AAGA,UAAI,KAAKE,OAAT,EAAkB;AACf,aAAKA,OAAL,CAAayB,SAAb,GAAyB,KAAzB;AACA,aAAKzB,OAAL,CAAac,QAAb,CAAsBM,MAAtB,EAA8BG,MAA9B,EAAsCL,UAAtC,EAAkDC,WAAlD;AACF;AAED;AACD;;AApC0C;;AAuC5C,eAAevB,eAAf","sourcesContent":["import IWorldView from \"./IWorldView\"\r\nimport WorldModel from \"./WorldModel\"\r\n\r\nclass CanvasWorldView implements IWorldView {\r\n\tprivate scalingFactor: number;\r\n\tprivate worldCanvas: HTMLCanvasElement;\r\n\tprivate context: CanvasRenderingContext2D | null = null;\r\n\r\n\tconstructor(scalingFactor: number) {\r\n\t\tthis.scalingFactor = scalingFactor;\r\n\t\tthis.worldCanvas = document.createElement(\"canvas\");\r\n\t\tthis.context = this.worldCanvas.getContext(\"2d\")!;\r\n\t\tdocument.body.appendChild(this.worldCanvas)\r\n\t}\r\n\r\n\tdisplay(worldModel: WorldModel) {\r\n\t\tconst canvasWidth = worldModel.worldWidth() * this.scalingFactor;\r\n\t\tconst canvasHeight = worldModel.worldHeight() * this.scalingFactor;\r\n\r\n\t\tthis.worldCanvas.width = canvasWidth;\r\n\t\tthis.worldCanvas.height = canvasHeight;\r\n\r\n\t\tthis.context!.fillRect(20, 20, canvasWidth, canvasHeight);\r\n\r\n\t\tconst snake = worldModel.Snake;\r\n\t\tif (snake) {\r\n\t\t\tsnakeSize = 4;\r\n\t\t\tconst snakeWidth = snakeSize * this.scalingFactor;\r\n\t\t\tconst snakeHeight = snakeSize * this.scalingFactor;\r\n\t\t\tconst snakeX = snake.position.x * this.scalingFactor;\r\n\t\t\tconst snakeY = snake.position.y * this.scalingFactor;\r\n\r\n\r\n\t\t\tif (this.context) {\r\n    \t\tthis.context.fillStyle = \"red\";\r\n    \t\tthis.context.fillRect(snakeX, snakeY, snakeWidth, snakeHeight);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default CanvasWorldView; "]},"metadata":{},"sourceType":"module"}