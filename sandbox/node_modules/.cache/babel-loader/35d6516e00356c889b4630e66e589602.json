{"ast":null,"code":"class CanvasWorldView {\n  constructor(scalingFactor) {\n    this.scalingFactor = void 0;\n    this.worldCanvas = void 0;\n    this.context = null;\n    this.scalingFactor = scalingFactor;\n    this.worldCanvas = document.createElement(\"canvas\");\n    const context = this.worldCanvas.getContext(\"2d\");\n\n    if (context) {\n      this.context = context;\n    } else {\n      throw new Error(\"Failed to get 2D context for canvas.\");\n    }\n\n    document.body.appendChild(this.worldCanvas);\n  }\n\n  display(worldModel) {\n    const canvasWidth = worldModel.worldWidth() * this.scalingFactor;\n    const canvasHeight = worldModel.worldHeight() * this.scalingFactor;\n\n    if (!this.context) {\n      throw new Error(\"Canvas 2D context is null.\");\n    }\n\n    this.worldCanvas.width = canvasWidth;\n    this.worldCanvas.height = canvasHeight;\n    this.context.fillStyle = \"black\"; // Set default fill style\n\n    this.context.fillRect(0, 0, canvasWidth, canvasHeight);\n    const snake = worldModel.Snake;\n\n    if (snake) {\n      const snakeWidth = this.scalingFactor;\n      const snakeHeight = this.scalingFactor;\n      const snakeX = snake.position.x * this.scalingFactor;\n      const snakeY = snake.position.y * this.scalingFactor;\n      this.context.fillStyle = \"red\"; // Update fill style for snake\n\n      this.context.fillRect(snakeX, snakeY, snakeWidth, snakeHeight);\n    }\n  }\n\n}\n\nexport default CanvasWorldView;","map":{"version":3,"sources":["C:/Users/trevo/OneDrive/Documents/College/Snake Game Code/Snake-Game/sandbox/src/CanvasWorldView.ts"],"names":["CanvasWorldView","constructor","scalingFactor","worldCanvas","context","document","createElement","getContext","Error","body","appendChild","display","worldModel","canvasWidth","worldWidth","canvasHeight","worldHeight","width","height","fillStyle","fillRect","snake","Snake","snakeWidth","snakeHeight","snakeX","position","x","snakeY","y"],"mappings":"AAGA,MAAMA,eAAN,CAA4C;AAK3CC,EAAAA,WAAW,CAACC,aAAD,EAAwB;AAAA,SAJ3BA,aAI2B;AAAA,SAH3BC,WAG2B;AAAA,SAF3BC,OAE2B,GAFgB,IAEhB;AAClC,SAAKF,aAAL,GAAqBA,aAArB;AACA,SAAKC,WAAL,GAAmBE,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAnB;AACA,UAAMF,OAAO,GAAG,KAAKD,WAAL,CAAiBI,UAAjB,CAA4B,IAA5B,CAAhB;;AACA,QAAIH,OAAJ,EAAa;AACZ,WAAKA,OAAL,GAAeA,OAAf;AACA,KAFD,MAEO;AACN,YAAM,IAAII,KAAJ,CAAU,sCAAV,CAAN;AACA;;AACDH,IAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0B,KAAKP,WAA/B;AACA;;AAEDQ,EAAAA,OAAO,CAACC,UAAD,EAAyB;AAC/B,UAAMC,WAAW,GAAGD,UAAU,CAACE,UAAX,KAA0B,KAAKZ,aAAnD;AACA,UAAMa,YAAY,GAAGH,UAAU,CAACI,WAAX,KAA2B,KAAKd,aAArD;;AAEA,QAAI,CAAC,KAAKE,OAAV,EAAmB;AAClB,YAAM,IAAII,KAAJ,CAAU,4BAAV,CAAN;AACA;;AAED,SAAKL,WAAL,CAAiBc,KAAjB,GAAyBJ,WAAzB;AACA,SAAKV,WAAL,CAAiBe,MAAjB,GAA0BH,YAA1B;AAEA,SAAKX,OAAL,CAAae,SAAb,GAAyB,OAAzB,CAX+B,CAWG;;AAClC,SAAKf,OAAL,CAAagB,QAAb,CAAsB,CAAtB,EAAyB,CAAzB,EAA4BP,WAA5B,EAAyCE,YAAzC;AAEA,UAAMM,KAAK,GAAGT,UAAU,CAACU,KAAzB;;AACA,QAAID,KAAJ,EAAW;AACV,YAAME,UAAU,GAAG,KAAKrB,aAAxB;AACA,YAAMsB,WAAW,GAAG,KAAKtB,aAAzB;AACA,YAAMuB,MAAM,GAAGJ,KAAK,CAACK,QAAN,CAAeC,CAAf,GAAmB,KAAKzB,aAAvC;AACA,YAAM0B,MAAM,GAAGP,KAAK,CAACK,QAAN,CAAeG,CAAf,GAAmB,KAAK3B,aAAvC;AAEA,WAAKE,OAAL,CAAae,SAAb,GAAyB,KAAzB,CANU,CAMsB;;AAChC,WAAKf,OAAL,CAAagB,QAAb,CAAsBK,MAAtB,EAA8BG,MAA9B,EAAsCL,UAAtC,EAAkDC,WAAlD;AACA;AACD;;AAzC0C;;AA4C5C,eAAexB,eAAf","sourcesContent":["import IWorldView from \"./IWorldView\";\r\nimport WorldModel from \"./WorldModel\";\r\n\r\nclass CanvasWorldView implements IWorldView {\r\n\tprivate scalingFactor: number;\r\n\tprivate worldCanvas: HTMLCanvasElement;\r\n\tprivate context: CanvasRenderingContext2D | null = null;\r\n\r\n\tconstructor(scalingFactor: number) {\r\n\t\tthis.scalingFactor = scalingFactor;\r\n\t\tthis.worldCanvas = document.createElement(\"canvas\");\r\n\t\tconst context = this.worldCanvas.getContext(\"2d\");\r\n\t\tif (context) {\r\n\t\t\tthis.context = context;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Failed to get 2D context for canvas.\");\r\n\t\t}\r\n\t\tdocument.body.appendChild(this.worldCanvas);\r\n\t}\r\n\r\n\tdisplay(worldModel: WorldModel) {\r\n\t\tconst canvasWidth = worldModel.worldWidth() * this.scalingFactor;\r\n\t\tconst canvasHeight = worldModel.worldHeight() * this.scalingFactor;\r\n\r\n\t\tif (!this.context) {\r\n\t\t\tthrow new Error(\"Canvas 2D context is null.\");\r\n\t\t}\r\n\r\n\t\tthis.worldCanvas.width = canvasWidth;\r\n\t\tthis.worldCanvas.height = canvasHeight;\r\n\r\n\t\tthis.context.fillStyle = \"black\"; // Set default fill style\r\n\t\tthis.context.fillRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n\t\tconst snake = worldModel.Snake;\r\n\t\tif (snake) {\r\n\t\t\tconst snakeWidth = this.scalingFactor;\r\n\t\t\tconst snakeHeight = this.scalingFactor;\r\n\t\t\tconst snakeX = snake.position.x * this.scalingFactor;\r\n\t\t\tconst snakeY = snake.position.y * this.scalingFactor;\r\n\r\n\t\t\tthis.context.fillStyle = \"red\"; // Update fill style for snake\r\n\t\t\tthis.context.fillRect(snakeX, snakeY, snakeWidth, snakeHeight);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default CanvasWorldView;\r\n"]},"metadata":{},"sourceType":"module"}