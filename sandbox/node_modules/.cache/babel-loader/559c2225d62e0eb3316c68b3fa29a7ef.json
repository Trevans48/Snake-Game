{"ast":null,"code":"import Player from \"./Player\";\n\nclass AvoidWallsPlayer extends Player {\n  constructor(SnakeController) {\n    super(SnakeController);\n  }\n\n  makeTurn() {\n    const snakePosition = this.SnakeController.snakePosition;\n    const snakeDirection = this.SnakeController.snakeDirection;\n    const worldWidth = this.SnakeController.worldWidth();\n    const worldHeight = this.SnakeController.worldHeight(); //up = 1, down = 2, left = 3, right = 4\n\n    if (snakeDirection === 1 && snakePosition.x < .5 * worldWidth && snakePosition.y === 0) {\n      this.SnakeController.turnSnakeRight();\n    } else if (snakeDirection === 1 && snakePosition.y === 0) {\n      this.SnakeController.turnSnakeLeft();\n    } else if (snakeDirection === 2 && snakePosition.x < .5 * worldWidth && snakePosition.y === worldHeight - 1) {\n      this.SnakeController.turnSnakeLeft();\n    } else if (snakeDirection === 2 && snakePosition.y === worldHeight - 1) {\n      this.SnakeController.turnSnakeRight();\n    } else if (snakeDirection === 3 && snakePosition.x === 0 && snakePosition.y < .5 * worldHeight) {\n      this.SnakeController.turnSnakeLeft();\n    } else if (snakeDirection === 3 && snakePosition.x === 0) {\n      this.SnakeController.turnSnakeRight();\n    } else if (snakeDirection === 4 && snakePosition.x === worldWidth - 1 && snakePosition.y < .5 * worldHeight) {\n      this.SnakeController.turnSnakeRight();\n    } else if (snakeDirection === 4 && snakePosition.x === worldWidth - 1) {\n      this.SnakeController.turnSnakeLeft();\n    }\n  }\n\n}\n\nexport default AvoidWallsPlayer;","map":{"version":3,"sources":["C:/Users/trevo/OneDrive/Documents/College/Snake Game Code/Snake-Game/sandbox/src/AvoidWallsPlayer.ts"],"names":["Player","AvoidWallsPlayer","constructor","SnakeController","makeTurn","snakePosition","snakeDirection","worldWidth","worldHeight","x","y","turnSnakeRight","turnSnakeLeft"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;;AAKA,MAAMC,gBAAN,SAA+BD,MAA/B,CAAsC;AACpCE,EAAAA,WAAW,CAACC,eAAD,EAAmC;AAC5C,UAAMA,eAAN;AACD;;AAEDC,EAAAA,QAAQ,GAAS;AACf,UAAMC,aAAa,GAAG,KAAKF,eAAL,CAAqBE,aAA3C;AACA,UAAMC,cAAc,GAAG,KAAKH,eAAL,CAAqBG,cAA5C;AACA,UAAMC,UAAU,GAAG,KAAKJ,eAAL,CAAqBI,UAArB,EAAnB;AACA,UAAMC,WAAW,GAAG,KAAKL,eAAL,CAAqBK,WAArB,EAApB,CAJe,CAMlB;;AACG,QAAIF,cAAc,KAAK,CAAnB,IAAwBD,aAAa,CAACI,CAAd,GAAkB,KAAGF,UAA7C,IAA2DF,aAAa,CAACK,CAAd,KAAoB,CAAnF,EAAsF;AACpF,WAAKP,eAAL,CAAqBQ,cAArB;AACD,KAFD,MAGK,IAAIL,cAAc,KAAK,CAAnB,IAAwBD,aAAa,CAACK,CAAd,KAAoB,CAAhD,EAAmD;AACtD,WAAKP,eAAL,CAAqBS,aAArB;AACD,KAFI,MAGA,IAAIN,cAAc,KAAK,CAAnB,IAAwBD,aAAa,CAACI,CAAd,GAAkB,KAAGF,UAA7C,IAA2DF,aAAa,CAACK,CAAd,KAAoBF,WAAW,GAAC,CAA/F,EAAkG;AACrG,WAAKL,eAAL,CAAqBS,aAArB;AACD,KAFI,MAGA,IAAIN,cAAc,KAAK,CAAnB,IAAwBD,aAAa,CAACK,CAAd,KAAoBF,WAAW,GAAC,CAA5D,EAA+D;AAClE,WAAKL,eAAL,CAAqBQ,cAArB;AACD,KAFI,MAGA,IAAIL,cAAc,KAAK,CAAnB,IAAwBD,aAAa,CAACI,CAAd,KAAoB,CAA5C,IAAiDJ,aAAa,CAACK,CAAd,GAAkB,KAAGF,WAA1E,EAAuF;AAC1F,WAAKL,eAAL,CAAqBS,aAArB;AACD,KAFI,MAGA,IAAIN,cAAc,KAAK,CAAnB,IAAwBD,aAAa,CAACI,CAAd,KAAoB,CAAhD,EAAmD;AACtD,WAAKN,eAAL,CAAqBQ,cAArB;AACD,KAFI,MAGA,IAAIL,cAAc,KAAK,CAAnB,IAAwBD,aAAa,CAACI,CAAd,KAAoBF,UAAU,GAAC,CAAvD,IAA4DF,aAAa,CAACK,CAAd,GAAkB,KAAGF,WAArF,EAAkG;AACrG,WAAKL,eAAL,CAAqBQ,cAArB;AACD,KAFI,MAGA,IAAIL,cAAc,KAAK,CAAnB,IAAwBD,aAAa,CAACI,CAAd,KAAoBF,UAAU,GAAC,CAA3D,EAA8D;AACjE,WAAKJ,eAAL,CAAqBS,aAArB;AACD;AACF;;AApCmC;;AAuCtC,eAAeX,gBAAf","sourcesContent":["import Player from \"./Player\";\r\nimport SnakeController from \"./SnakeController\"\r\nimport Snake from \"./Snake\"\r\nimport Point from \"./Point\"\r\n\r\nclass AvoidWallsPlayer extends Player {\r\n  constructor(SnakeController: SnakeController) {\r\n    super(SnakeController);\r\n  }\r\n\r\n  makeTurn(): void {\r\n    const snakePosition = this.SnakeController.snakePosition;\r\n    const snakeDirection = this.SnakeController.snakeDirection;\r\n    const worldWidth = this.SnakeController.worldWidth();\r\n    const worldHeight = this.SnakeController.worldHeight();\r\n\r\n //up = 1, down = 2, left = 3, right = 4\r\n    if (snakeDirection === 1 && snakePosition.x < .5*worldWidth && snakePosition.y === 0) {\r\n      this.SnakeController.turnSnakeRight();\r\n    } \r\n    else if (snakeDirection === 1 && snakePosition.y === 0) {\r\n      this.SnakeController.turnSnakeLeft();\r\n    } \r\n    else if (snakeDirection === 2 && snakePosition.x < .5*worldWidth && snakePosition.y === worldHeight-1) {\r\n      this.SnakeController.turnSnakeLeft();\r\n    } \r\n    else if (snakeDirection === 2 && snakePosition.y === worldHeight-1) {\r\n      this.SnakeController.turnSnakeRight();\r\n    } \r\n    else if (snakeDirection === 3 && snakePosition.x === 0 && snakePosition.y < .5*worldHeight) {\r\n      this.SnakeController.turnSnakeLeft();\r\n    } \r\n    else if (snakeDirection === 3 && snakePosition.x === 0) {\r\n      this.SnakeController.turnSnakeRight();\r\n    } \r\n    else if (snakeDirection === 4 && snakePosition.x === worldWidth-1 && snakePosition.y < .5*worldHeight) {\r\n      this.SnakeController.turnSnakeRight();\r\n    }\r\n    else if (snakeDirection === 4 && snakePosition.x === worldWidth-1) {\r\n      this.SnakeController.turnSnakeLeft();\r\n    }\r\n  }\r\n}\r\n\r\nexport default AvoidWallsPlayer;"]},"metadata":{},"sourceType":"module"}