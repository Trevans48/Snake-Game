{"ast":null,"code":"class GameController {\n  constructor(world) {\n    this.world = world;\n    this.player1 = void 0;\n    this.player2 = void 0;\n    this.lastTime = 0;\n    this.world = world;\n    this.player1 = null;\n    this.player2 = null;\n  }\n\n  setPlayer1(player) {\n    this.player1 = player;\n  }\n\n  setPlayer2(player) {\n    this.player2 = player;\n  }\n\n  run() {\n    let lastTime = 0;\n    this.startGame();\n  }\n\n  updateFrame() {\n    if (this.player1) {\n      this.player1.makeTurn();\n    }\n\n    if (this.player2) {\n      this.player2.makeTurn();\n    }\n\n    const currentTime = performance.now();\n    const elapsedTime = currentTime - this.lastTime;\n\n    if (elapsedTime > 250) {\n      this.world.update(1);\n      this.lastTime = currentTime;\n    }\n\n    requestAnimationFrame(this.updateFrame.bind(this));\n  }\n\n  startGame() {\n    requestAnimationFrame(this.updateFrame.bind(this));\n  }\n\n}\n\nexport {};","map":{"version":3,"sources":["C:/Users/trevo/OneDrive/Documents/College/Snake Game Code/Snake-Game/sandbox/src/GameController.ts"],"names":["GameController","constructor","world","player1","player2","lastTime","setPlayer1","player","setPlayer2","run","startGame","updateFrame","makeTurn","currentTime","performance","now","elapsedTime","update","requestAnimationFrame","bind"],"mappings":"AAGA,MAAMA,cAAN,CAAqB;AAIpBC,EAAAA,WAAW,CAASC,KAAT,EAA4B;AAAA,SAAnBA,KAAmB,GAAnBA,KAAmB;AAAA,SAH/BC,OAG+B;AAAA,SAF/BC,OAE+B;AAAA,SAD/BC,QAC+B,GADZ,CACY;AACtC,SAAKH,KAAL,GAAaA,KAAb;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,OAAL,GAAe,IAAf;AACA;;AAEDE,EAAAA,UAAU,CAACC,MAAD,EAAiB;AAC1B,SAAKJ,OAAL,GAAeI,MAAf;AACA;;AAEDC,EAAAA,UAAU,CAACD,MAAD,EAAiB;AAC1B,SAAKH,OAAL,GAAeG,MAAf;AACA;;AAEDE,EAAAA,GAAG,GAAI;AACN,QAAIJ,QAAQ,GAAG,CAAf;AACA,SAAKK,SAAL;AACA;;AAEOC,EAAAA,WAAW,GAAG;AACrB,QAAI,KAAKR,OAAT,EAAkB;AACjB,WAAKA,OAAL,CAAaS,QAAb;AACA;;AAED,QAAI,KAAKR,OAAT,EAAkB;AACjB,WAAKA,OAAL,CAAaQ,QAAb;AACA;;AAED,UAAMC,WAAW,GAAGC,WAAW,CAACC,GAAZ,EAApB;AACM,UAAMC,WAAW,GAAGH,WAAW,GAAG,KAAKR,QAAvC;;AAEA,QAAIW,WAAW,GAAG,GAAlB,EAAuB;AACnB,WAAKd,KAAL,CAAWe,MAAX,CAAkB,CAAlB;AACA,WAAKZ,QAAL,GAAgBQ,WAAhB;AACH;;AAEDK,IAAAA,qBAAqB,CAAC,KAAKP,WAAL,CAAiBQ,IAAjB,CAAsB,IAAtB,CAAD,CAArB;AACH;;AAEOT,EAAAA,SAAS,GAAG;AAChBQ,IAAAA,qBAAqB,CAAC,KAAKP,WAAL,CAAiBQ,IAAjB,CAAsB,IAAtB,CAAD,CAArB;AACN;;AA7CmB","sourcesContent":["import WorldModel from \"./WorldModel\";\r\nimport Player from \"./Player\";\r\n\r\nclass GameController {\r\n\tprivate player1: Player | null;\r\n\tprivate player2: Player | null;\r\n\tprivate lastTime: number = 0;\r\n\tconstructor(private world: WorldModel) {\r\n\t\tthis.world = world;\r\n\t\tthis.player1 = null;\r\n\t\tthis.player2 = null;\r\n\t}\r\n\r\n\tsetPlayer1(player: Player) {\r\n\t\tthis.player1 = player;\r\n\t}\r\n\r\n\tsetPlayer2(player: Player) {\r\n\t\tthis.player2 = player;\r\n\t}\r\n\r\n\trun () {\r\n\t\tlet lastTime = 0;\r\n\t\tthis.startGame();\r\n\t}\r\n\r\n\tprivate updateFrame() {\r\n\t\tif (this.player1) {\r\n\t\t\tthis.player1.makeTurn();\r\n\t\t}\r\n\r\n\t\tif (this.player2) {\r\n\t\t\tthis.player2.makeTurn();\r\n\t\t}\r\n\r\n\t\tconst currentTime = performance.now(); \r\n        const elapsedTime = currentTime - this.lastTime;\r\n\r\n        if (elapsedTime > 250) {\r\n            this.world.update(1);\r\n            this.lastTime = currentTime;\r\n        }\r\n\r\n        requestAnimationFrame(this.updateFrame.bind(this));\r\n    }\r\n\r\n    private startGame() {\r\n        requestAnimationFrame(this.updateFrame.bind(this));\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}