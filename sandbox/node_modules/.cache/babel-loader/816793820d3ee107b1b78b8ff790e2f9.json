{"ast":null,"code":"const display = function () {\n  for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {\n    items[_key] = arguments[_key];\n  }\n\n  Array.prototype.forEach.call(items, item => {\n    if (item instanceof Array) {\n      item = \"[ \" + item.map(a => {\n        if (typeof a === \"string\") {\n          return \"'\" + a.replace(\"'\", \"\\\\'\") + \"'\";\n        } else {\n          return a;\n        }\n      }).reduce((acc, a) => {\n        return acc + \", \" + a;\n      }) + \" ]\";\n    }\n\n    document.getElementById(\"output\").appendChild(document.createTextNode(item));\n    document.getElementById(\"output\").appendChild(document.createTextNode(\" \"));\n  });\n  document.getElementById(\"output\").appendChild(document.createTextNode(\"\\n\"));\n};\n\nexport default display;","map":{"version":3,"sources":["C:/Users/trevo/OneDrive/Documents/College/sandbox/src/display.ts"],"names":["display","items","Array","prototype","forEach","call","item","map","a","replace","reduce","acc","document","getElementById","appendChild","createTextNode"],"mappings":"AAAA,MAAMA,OAAO,GAAG,YAAqB;AAAA,oCAAjBC,KAAiB;AAAjBA,IAAAA,KAAiB;AAAA;;AACnCC,EAAAA,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BJ,KAA7B,EAAqCK,IAAD,IAAe;AACjD,QAAIA,IAAI,YAAYJ,KAApB,EAA2B;AACzBI,MAAAA,IAAI,GACF,OACAA,IAAI,CACDC,GADH,CACQC,CAAD,IAAY;AACf,YAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACzB,iBAAO,MAAMA,CAAC,CAACC,OAAF,CAAU,GAAV,EAAe,KAAf,CAAN,GAA8B,GAArC;AACD,SAFD,MAEO;AACL,iBAAOD,CAAP;AACD;AACF,OAPH,EAQGE,MARH,CAQU,CAACC,GAAD,EAAcH,CAAd,KAA4B;AAClC,eAAOG,GAAG,GAAG,IAAN,GAAaH,CAApB;AACD,OAVH,CADA,GAYA,IAbF;AAcD;;AACDI,IAAAA,QAAQ,CACLC,cADH,CACkB,QADlB,EAEGC,WAFH,CAEeF,QAAQ,CAACG,cAAT,CAAwBT,IAAxB,CAFf;AAGAM,IAAAA,QAAQ,CACLC,cADH,CACkB,QADlB,EAEGC,WAFH,CAEeF,QAAQ,CAACG,cAAT,CAAwB,GAAxB,CAFf;AAGD,GAvBD;AAwBAH,EAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAmCC,WAAnC,CAA+CF,QAAQ,CAACG,cAAT,CAAwB,IAAxB,CAA/C;AACD,CA1BD;;AA4BA,eAAef,OAAf","sourcesContent":["const display = (...items: any[]) => {\r\n  Array.prototype.forEach.call(items, (item: any) => {\r\n    if (item instanceof Array) {\r\n      item =\r\n        \"[ \" +\r\n        item\r\n          .map((a: any) => {\r\n            if (typeof a === \"string\") {\r\n              return \"'\" + a.replace(\"'\", \"\\\\'\") + \"'\";\r\n            } else {\r\n              return a;\r\n            }\r\n          })\r\n          .reduce((acc: string, a: string) => {\r\n            return acc + \", \" + a;\r\n          }) +\r\n        \" ]\";\r\n    }\r\n    document\r\n      .getElementById(\"output\")!\r\n      .appendChild(document.createTextNode(item));\r\n    document\r\n      .getElementById(\"output\")!\r\n      .appendChild(document.createTextNode(\" \"));\r\n  });\r\n  document.getElementById(\"output\")!.appendChild(document.createTextNode(\"\\n\"));\r\n};\r\n\r\nexport default display;\r\n"]},"metadata":{},"sourceType":"module"}