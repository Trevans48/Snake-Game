{"ast":null,"code":"import Player from \"./Player\";\n\nclass AvoidWallsPlayer extends Player {\n  constructor(snakeController) {\n    super(snakeController);\n  }\n\n  makeTurn() {\n    const snakePosition = this.sc.snakePosition;\n    const snakeDirection = this.sc.snakeDirection;\n    const worldWidth = this.sc.worldWidth();\n    const worldHeight = this.sc.worldHeight();\n    console.log(\"Snake Position:\", snakePosition);\n    console.log(\"Snake Direction:\", snakeDirection);\n    console.log(\"World Width:\", worldWidth);\n    console.log(\"World Height:\", worldHeight); //up = 1, down = 2, left = 3, right = 4\n\n    if (snakeDirection === 1 && snakePosition.x < .5 * worldWidth && snakePosition.y === 0) {\n      this.sc.turnSnakeRight();\n    } else if (snakeDirection === 1 && snakePosition.y === 0) {\n      this.sc.turnSnakeLeft();\n    } else if (snakeDirection === 2 && snakePosition.x < .5 * worldWidth && snakePosition.y === worldHeight - 1) {\n      this.sc.turnSnakeLeft();\n    } else if (snakeDirection === 2 && snakePosition.y === worldHeight - 1) {\n      this.sc.turnSnakeRight();\n    } else if (snakeDirection === 3 && snakePosition.x === 0 && snakePosition.y < .5 * worldHeight) {\n      this.sc.turnSnakeLeft();\n    } else if (snakeDirection === 3 && snakePosition.x === 0) {\n      this.sc.turnSnakeRight();\n    } else if (snakeDirection === 4 && snakePosition.x === worldWidth - 1 && snakePosition.y < .5 * worldHeight) {\n      this.sc.turnSnakeRight();\n    } else if (snakeDirection === 4 && snakePosition.x === worldWidth - 1) {\n      this.sc.turnSnakeLeft();\n    }\n  }\n\n}\n\nexport default AvoidWallsPlayer;","map":{"version":3,"sources":["C:/Users/trevo/OneDrive/Documents/College/Snake Game Code/Snake-Game/sandbox/src/AvoidWallsPlayer.ts"],"names":["Player","AvoidWallsPlayer","constructor","snakeController","makeTurn","snakePosition","sc","snakeDirection","worldWidth","worldHeight","console","log","x","y","turnSnakeRight","turnSnakeLeft"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;;AAKA,MAAMC,gBAAN,SAA+BD,MAA/B,CAAsC;AACpCE,EAAAA,WAAW,CAACC,eAAD,EAAmC;AAC5C,UAAMA,eAAN;AACD;;AAEDC,EAAAA,QAAQ,GAAS;AACf,UAAMC,aAAa,GAAG,KAAKC,EAAL,CAAQD,aAA9B;AACA,UAAME,cAAc,GAAG,KAAKD,EAAL,CAAQC,cAA/B;AACA,UAAMC,UAAU,GAAG,KAAKF,EAAL,CAAQE,UAAR,EAAnB;AACA,UAAMC,WAAW,GAAG,KAAKH,EAAL,CAAQG,WAAR,EAApB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BN,aAA/B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCJ,cAAhC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,UAA5B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,WAA7B,EATe,CAWlB;;AACG,QAAIF,cAAc,KAAK,CAAnB,IAAwBF,aAAa,CAACO,CAAd,GAAmB,KAAGJ,UAA9C,IAA6DH,aAAa,CAACQ,CAAd,KAAoB,CAArF,EAAwF;AACtF,WAAKP,EAAL,CAAQQ,cAAR;AACD,KAFD,MAGK,IAAIP,cAAc,KAAK,CAAnB,IAAwBF,aAAa,CAACQ,CAAd,KAAoB,CAAhD,EAAmD;AACtD,WAAKP,EAAL,CAAQS,aAAR;AACD,KAFI,MAGA,IAAIR,cAAc,KAAK,CAAnB,IAAwBF,aAAa,CAACO,CAAd,GAAmB,KAAGJ,UAA9C,IAA6DH,aAAa,CAACQ,CAAd,KAAqBJ,WAAW,GAAC,CAAlG,EAAsG;AACzG,WAAKH,EAAL,CAAQS,aAAR;AACD,KAFI,MAGA,IAAIR,cAAc,KAAK,CAAnB,IAAwBF,aAAa,CAACQ,CAAd,KAAqBJ,WAAW,GAAC,CAA7D,EAAiE;AACpE,WAAKH,EAAL,CAAQQ,cAAR;AACD,KAFI,MAGA,IAAIP,cAAc,KAAK,CAAnB,IAAwBF,aAAa,CAACO,CAAd,KAAoB,CAA5C,IAAiDP,aAAa,CAACQ,CAAd,GAAmB,KAAGJ,WAA3E,EAAyF;AAC5F,WAAKH,EAAL,CAAQS,aAAR;AACD,KAFI,MAGA,IAAIR,cAAc,KAAK,CAAnB,IAAwBF,aAAa,CAACO,CAAd,KAAoB,CAAhD,EAAmD;AACtD,WAAKN,EAAL,CAAQQ,cAAR;AACD,KAFI,MAGA,IAAIP,cAAc,KAAK,CAAnB,IAAwBF,aAAa,CAACO,CAAd,KAAqBJ,UAAU,GAAC,CAAxD,IAA8DH,aAAa,CAACQ,CAAd,GAAmB,KAAGJ,WAAxF,EAAsG;AACzG,WAAKH,EAAL,CAAQQ,cAAR;AACD,KAFI,MAGA,IAAIP,cAAc,KAAK,CAAnB,IAAwBF,aAAa,CAACO,CAAd,KAAqBJ,UAAU,GAAC,CAA5D,EAAgE;AACnE,WAAKF,EAAL,CAAQS,aAAR;AACD;AACF;;AAzCmC;;AA4CtC,eAAed,gBAAf","sourcesContent":["import Player from \"./Player\";\r\nimport SnakeController from \"./SnakeController\"\r\nimport Snake from \"./Snake\"\r\nimport Point from \"./Point\"\r\n\r\nclass AvoidWallsPlayer extends Player {\r\n  constructor(snakeController: SnakeController) {\r\n    super(snakeController);\r\n  }\r\n\r\n  makeTurn(): void {\r\n    const snakePosition = this.sc.snakePosition;\r\n    const snakeDirection = this.sc.snakeDirection;\r\n    const worldWidth = this.sc.worldWidth();\r\n    const worldHeight = this.sc.worldHeight();\r\n\r\n    console.log(\"Snake Position:\", snakePosition);\r\n    console.log(\"Snake Direction:\", snakeDirection);\r\n    console.log(\"World Width:\", worldWidth);\r\n    console.log(\"World Height:\", worldHeight);\r\n\r\n //up = 1, down = 2, left = 3, right = 4\r\n    if (snakeDirection === 1 && snakePosition.x < (.5*worldWidth) && snakePosition.y === 0) {\r\n      this.sc.turnSnakeRight();\r\n    } \r\n    else if (snakeDirection === 1 && snakePosition.y === 0) {\r\n      this.sc.turnSnakeLeft();\r\n    } \r\n    else if (snakeDirection === 2 && snakePosition.x < (.5*worldWidth) && snakePosition.y === (worldHeight-1)) {\r\n      this.sc.turnSnakeLeft();\r\n    } \r\n    else if (snakeDirection === 2 && snakePosition.y === (worldHeight-1)) {\r\n      this.sc.turnSnakeRight();\r\n    } \r\n    else if (snakeDirection === 3 && snakePosition.x === 0 && snakePosition.y < (.5*worldHeight)) {\r\n      this.sc.turnSnakeLeft();\r\n    } \r\n    else if (snakeDirection === 3 && snakePosition.x === 0) {\r\n      this.sc.turnSnakeRight();\r\n    } \r\n    else if (snakeDirection === 4 && snakePosition.x === (worldWidth-1) && snakePosition.y < (.5*worldHeight)) {\r\n      this.sc.turnSnakeRight();\r\n    }\r\n    else if (snakeDirection === 4 && snakePosition.x === (worldWidth-1)) {\r\n      this.sc.turnSnakeLeft();\r\n    }\r\n  }\r\n}\r\n\r\nexport default AvoidWallsPlayer;"]},"metadata":{},"sourceType":"module"}